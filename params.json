{"name":"Open Location Code","tagline":"","body":"Open Location Codes are a way of encoding location into a form that is\r\neasier to use than latitude and longitude. They are designed to be used \r\nlike street addresses, especially in places where buildings aren't numbered \r\nor streets aren't named.\r\n\r\n## Stop giving directions\r\n\r\nInstead of giving people complicated directions, just give them a short code \r\nthat tells them exactly where you want them to go. They can enter it in their\r\nphone, laptop, computer, and get the exact location. They don't even need to\r\nbe online!\r\n\r\nWe have a [demo site](http://plus.codes) that you can use to find out the code\r\nfor a place, or you can enter a code and find out where it is. (You can use this site\r\nfrom a mobile phone, and even use it offline.)\r\n\r\n## I'm a business, can I use the codes?\r\n\r\nOf course. The codes are free to get and free to decode. We've got software\r\nlibraries on our Github site, and example web pages. If you need help, you can\r\ncontact the [mailing list](https://groups.google.com/forum/#!forum/open-location-code).\r\n\r\n## That's so cool! Can I help?\r\n\r\nYes! We are working on implementations in other languages, but if you'd like\r\nto do an implementation, contact the [mailing list](https://groups.google.com/forum/#!forum/open-location-code)\r\nand see if anyone else is already working on the language.\r\n\r\nAlternatively, if you know someone who would be interested, let them know.\r\n\r\n## Why didn't you just use X?\r\n\r\nThe first thing we did was to work out what attributes of addresses were useful.\r\nOnce we had that list, we looked at a lot of existing location coding methods to\r\nsee how well they matched our list. Once we'd done that, we decided that it was worth\r\nto at least define a new one, and then see if it was well received.\r\n\r\nThe other methods were mostly designed with different ideas in mind, and\r\nso this isn't a criticism of them.\r\n\r\n## What makes Open Location Codes different?\r\n\r\n- The codes aren't case sensitive and don't include easily confused characters. We've selected the\r\ncharacters to make it difficult to impossible to spell words in any language.\r\n- Codes are generated from latitude and longitude, so they already exist for everywhere. Nobody has to\r\nset them up or pay for them. Each place has only one code.\r\n- Codes that are similar are located closer together than codes that are different.\r\n- Open Location Codes represent an area, not a point.\r\n- The size of the area depends on the length of the code. Long codes are more accurate than short\r\ncodes.\r\n- Dropping characters from the end of a code gives you a larger area that contained the original code.\r\n- Codes are 10 or 11 characters long (*+8FMG.P9FW6M*), but if you're in the local area (within 50km),\r\nthe leading four characters of the code can be omitted (*+P9FW6M*) making the codes even shorter.\r\n- The short code can be used together with a place name (like *+P9FW6M Pisa, Italy*).\r\n\r\n## Point me to the info!\r\n\r\n * [Demonstration site](http://plus.codes/)\r\n * [Mailing list](https://groups.google.com/forum/#!forum/open-location-code)\r\n * [Comparison of existing location encoding systems](https://github.com/google/open-location-code/blob/master/docs/comparison.adoc)\r\n * [Open Location Code definition](https://github.com/google/open-location-code/blob/master/docs/olc_definition.adoc)\r\n\r\n## Authors\r\n\r\nThe main author is Doug Rinckes (@drinckes), with the help of lots of colleagues including:\r\n\r\n- Philipp Bunge\r\n- Aner Ben-Artzi\r\n- Jarda Bengl\r\n- Prasenit Phukan\r\n- Sacha van Ginhoven","google":"UA-55279196-1","note":"Don't delete this file! It's used internally to help with page regeneration."}